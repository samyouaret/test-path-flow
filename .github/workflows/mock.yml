name: mock-deploy-B2B-test
on:
  push:
    branches:
      - main
    paths:
      - 'environments/prd/lmd-odoo-integration-service/**'

  pull_request:
    branches:
      - main
    paths:
      - 'environments/stg/lmd-odoo-integration-service/**'
      - 'environments/qa/lmd-odoo-integration-service/**'
permissions:
  contents: write
  id-token: write
  pull-requests: write # Required to comment with the plan output on PRs
jobs:
  extract-context:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-vars.outputs.env }}
      project_id: ${{ steps.set-vars.outputs.project_id }}
      working_directory: ${{ steps.set-vars.outputs.working_directory }}
      service_account: ${{ steps.set-vars.outputs.service_account }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changed files
        id: changed-files
        run: |
          chmod +x ./scripts/detect-changed-files.sh
          ./scripts/detect-changed-files.sh
          # echo github event used in env for debugging
          echo "event used in env:"
          echo "GITHUB_EVENT_NAME: ${{ github.event_name }}"
          echo "PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}"
          echo "BEFORE_SHA: ${{ github.event.before }}"
          echo "GITHUB_SHA: ${{ github.sha }}"
          echo "GITHUB_OUTPUT: $GITHUB_OUTPUT"
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          BEFORE_SHA: ${{ github.event.before }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_OUTPUT: $GITHUB_OUTPUT

      - name: Extract environment variables based on the changed directory
        id: set-vars
        run: |
          chmod +x ./scripts/extract-env-vars.sh
          ./scripts/extract-env-vars.sh "${{ steps.changed-files.outputs.file }}"
        env:
          GITHUB_OUTPUT: $GITHUB_OUTPUT

  mock-deploy:
    needs: extract-context
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ needs.extract-context.outputs.working_directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Approve Pull Request
        if: github.event_name == 'pull_request'
        run: |
          echo "Would approve PR ${{ github.event.pull_request.number }}"
          # gh pr review ${{ github.event.pull_request.number }} --approve --body "Approved by GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        if: github.event_name == 'pull_request'
        run: |
          echo "Would merge PR ${{ github.event.pull_request.number }}"
          gh pr merge ${{ github.event.pull_request.number }} --merge --body "Merged by GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Mock Auth
        run: |
          echo "Would authenticate with:"
          echo "Project ID: ${{ needs.extract-context.outputs.project_id }}"
          echo "Service Account: ${{ needs.extract-context.outputs.service_account }}"
          
      - name: Mock Kubectl Authentication
        run: |
          echo "Would run: gcloud container clusters get-credentials [CLUSTER_NAME] --zone europe-west1-d --project ${{ needs.extract-context.outputs.project_id }}"

      - name: Mock Skaffold Deploy
        run: |
          echo "Would run skaffold deploy in directory: $(pwd)"
          echo "ENV: ${{ needs.extract-context.outputs.env }}"
          echo "PROJECT_ID: ${{ needs.extract-context.outputs.project_id }}"
          echo "WORKING_DIR: ${{ needs.extract-context.outputs.working_directory }}"
          echo "SERVICE_ACCOUNT: ${{ needs.extract-context.outputs.service_account }}"
          echo "Current files in the working directory:"
          pwd
          ls -la
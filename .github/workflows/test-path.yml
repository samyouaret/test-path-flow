name: mock-deploy-lmd-integration
on:
  pull_request:
    branches: [test]
    paths:
      - 'environments/**/lmd-odoo-integration-service/deploy.yaml'
      - 'environments/**/lmd-odoo-integration-service/deploy.yml'
jobs:
  extract-context:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-vars.outputs.env }}
      project_id: ${{ steps.set-vars.outputs.project_id }}
      working_directory: ${{ steps.set-vars.outputs.working_directory }}
      service_account: ${{ steps.set-vars.outputs.service_account }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.sha }} | grep -E "environments/.*/lmd-odoo-integration-service/deploy\.ya?ml")
          echo "Changed files: $CHANGED_FILES"
          FIRST_FILE=$(echo "$CHANGED_FILES" | head -n 1)
          echo "Working only on First file: $FIRST_FILE"
          echo "file=$FIRST_FILE" >> $GITHUB_OUTPUT

      - name: Extract env from path
        id: set-vars
        run: |
          FILE="${{ steps.changed-files.outputs.file }}"
          echo "File used for reference: $FILE"
          
          # Extract environment from the path
          ENV=$(echo "$FILE" | cut -d'/' -f2)
          WORKING_DIR=$(dirname "$FILE")
          PROJECT_ID="ysr-lmd-odoo-$ENV"
          SERVICE_ACCOUNT="${PROJECT_ID}-sa@${PROJECT_ID}.iam.gserviceaccount.com"
          
          echo "env=$ENV" >> $GITHUB_OUTPUT
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
          echo "working_directory=$WORKING_DIR" >> $GITHUB_OUTPUT
          echo "service_account=$SERVICE_ACCOUNT" >> $GITHUB_OUTPUT
      - name: Print Values for this job
        run: |
          echo "env: ${{ steps.set-vars.outputs.env }}"
          echo "project_id: ${{ steps.set-vars.outputs.project_id }}"
          echo "working_directory: ${{ steps.set-vars.outputs.working_directory }}"
          echo "service_account: ${{ steps.set-vars.outputs.service_account }}"

  mock-deploy:
    needs: extract-context
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ needs.extract-context.outputs.working_directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Print Values
        run: |
          echo "ENV: ${{ needs.extract-context.outputs.env }}"
          echo "PROJECT_ID: ${{ needs.extract-context.outputs.project_id }}"
          echo "WORKING_DIR: ${{ needs.extract-context.outputs.working_directory }}"
          echo "SERVICE_ACCOUNT: ${{ needs.extract-context.outputs.service_account }}"
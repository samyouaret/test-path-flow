name: Test Deploy Odoo Integration Service

on:
  workflow_dispatch:
    inputs:
      test_branch:
        type: choice
        description: 'Branch to test (main, staging, qa)'
        required: true
        options:
          - main
          - staging
          - qa
        default: 'main'
    
permissions:
  contents: read

jobs:
  determine_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      image_prefix: ${{ steps.set-env.outputs.image_prefix }}
      pr_emoji: ${{ steps.set-env.outputs.pr_emoji }}
      pr_body_prefix: ${{ steps.set-env.outputs.pr_body_prefix }}
      env_display_name: ${{ steps.set-env.outputs.env_display_name }}
    steps:
      #  this is needed since some of vars names are not consistent with the env names like image_prefix for staging
    - name: Set environment variables from config
      id: set-env
      run: |
        BRANCH="${{ github.event.inputs.test_branch }}"
        # print the current directory
        echo "Current directory: $(pwd)"
        # print files in the current directory
        echo "Files in the current directory:"
        ls -la
        CONFIG=$(cat ./env-config.json)

        # Use jq to extract environment settings
        if [[ $(echo "$CONFIG" | jq -r ".environments[\"$BRANCH\"]") != "null" ]]; then
          echo "environment=$(echo "$CONFIG" | jq -r ".environments[\"$BRANCH\"].environment")" >> $GITHUB_OUTPUT
          echo "image_prefix=$(echo "$CONFIG" | jq -r ".environments[\"$BRANCH\"].image_prefix")" >> $GITHUB_OUTPUT
          echo "pr_emoji=$(echo "$CONFIG" | jq -r ".environments[\"$BRANCH\"].pr_emoji")" >> $GITHUB_OUTPUT
          echo "pr_body_prefix=$(echo "$CONFIG" | jq -r ".environments[\"$BRANCH\"].pr_body_prefix")" >> $GITHUB_OUTPUT
          echo "env_display_name=$(echo "$CONFIG" | jq -r ".environments[\"$BRANCH\"].env_display_name")" >> $GITHUB_OUTPUT
        else
          echo "No configuration found for branch: $BRANCH"
          exit 1
        fi
            
    - name: Echo environment variables
      run: |
          echo "Environment: ${{ steps.set-env.outputs.environment }}"
          echo "Image Prefix: ${{ steps.set-env.outputs.image_prefix }}"
          echo "PR Emoji: ${{ steps.set-env.outputs.pr_emoji }}"
          echo "PR Body Prefix: ${{ steps.set-env.outputs.pr_body_prefix }}"
          echo "Environment Display Name: ${{ steps.set-env.outputs.env_display_name }}"

  build_integration_service:
    environment: ${{ needs.determine_environment.outputs.environment }}
    runs-on: ubuntu-latest
    needs: determine_environment
    env:
      MW_IMAGE_DOCKER_TAG: ${{ needs.determine_environment.outputs.image_prefix }}-v${{github.sha}}
      PROJECT_ID: test-project-id
    outputs:
      odoo_is_image_tag: ${{ env.MW_IMAGE_DOCKER_TAG }}
    steps:
      - name: Echo environment
        run: |
         echo "Using environment: ${{ needs.determine_environment.outputs.environment }}"
      - name: Echo image tag
        run: |
         echo "Image tag: ${{ env.MW_IMAGE_DOCKER_TAG }}"
      
      - name: Mock Docker login
        run: echo "Mock Docker login to Artifact Registry"
          
      - name: Mock Docker build and push
        run: |
          echo "Building Docker image with environment-specific variables"
          echo "Docker image would be tagged as: europe-west1-docker.pkg.dev/${PROJECT_ID}/ysr-lmd-odoo-${{needs.determine_environment.outputs.environment}}-gcr/odoo-integration-svc:${{env.MW_IMAGE_DOCKER_TAG}}"

  open-pr-on-ship-repo:
    runs-on: ubuntu-latest
    needs: [determine_environment, build_integration_service]
    steps:
      - name: Echo repository checkout
        run: echo "Would checkout YAtechnologies/pi-lmd-odoo-ship repository"

      - name: Echo deployment file update
        run: |
          echo "Would update deployment file: environments/${{ needs.determine_environment.outputs.environment }}/lmd-odoo-integration-service/lmd-odoo-integration-service.${{ needs.determine_environment.outputs.environment }}.yaml"
          echo "Find and replace pattern would be:"
          echo "  From: image: europe-west1-docker.pkg.dev/test-project-id/ysr-lmd-odoo-${{ needs.determine_environment.outputs.environment }}-gcr/odoo-integration-svc:${{ needs.determine_environment.outputs.image_prefix }}-*"
          echo "  To:   image: europe-west1-docker.pkg.dev/test-project-id/ysr-lmd-odoo-${{ needs.determine_environment.outputs.environment }}-gcr/odoo-integration-svc:${{ needs.build_integration_service.outputs.odoo_is_image_tag }}"
          
      - name: Echo commit message
        run: |
          echo "Would commit with message: Updates IS-B2C image [${{ needs.determine_environment.outputs.env_display_name }}]"
          
      - name: Echo PR creation
        run: |
          echo "Would create PR with:"
          echo "  Title: [B2C ${{ needs.determine_environment.outputs.env_display_name }}] - Test PR Title ${{ needs.determine_environment.outputs.pr_emoji }}"
          echo "  Body: ${{ needs.determine_environment.outputs.pr_body_prefix }} https://github.com/YAtechnologies/pi-lmd-odoo-ship/commits/${{ github.sha }}"
          
      - name: Summary of all values
        run: |
          echo "==================== TEST SUMMARY ===================="
          echo "Branch: ${{ github.event.inputs.test_branch }}"
          echo "Environment: ${{ needs.determine_environment.outputs.environment }}"
          echo "Image Prefix: ${{ needs.determine_environment.outputs.image_prefix }}"
          echo "Full Image Tag: ${{ needs.build_integration_service.outputs.odoo_is_image_tag }}"
          echo "Full Image URL: europe-west1-docker.pkg.dev/test-project-id/ysr-lmd-odoo-${{ needs.determine_environment.outputs.environment }}-gcr/odoo-integration-svc:${{ needs.build_integration_service.outputs.odoo_is_image_tag }}"
          echo "PR Emoji: ${{ needs.determine_environment.outputs.pr_emoji }}"
          echo "PR Body Prefix: ${{ needs.determine_environment.outputs.pr_body_prefix }}"
          echo "Environment Display Name: ${{ needs.determine_environment.outputs.env_display_name }}"
          echo "======================================================"